<div align="right"><?php echo $this->subButtons?></div>
<hr style="margin-top:4px; margin-bottom:4px;">

<table id="dtb_assessments" class="dTable table table-hover table-bordered table-condensed table-mini">
	<thead>
		<tr>
		 <th>AID</th>
         <th width="100">Date</th>
         <th>Topic</th>
         <th>Type</th>
         <th>Class</th>
         <th width="50">Max.</th>
         <th width="200" align="center">Manage</th>
		</tr>
	</thead>
	<tbody>
    </tbody>
</table>

<div class="btn-group" data-toggle="buttons-radio">
<?php
  foreach ($this->classes as $key => $value) {
      $n = $this->getGradeName($value);
      echo "<button id='bb$key' class='btn btn-danger btn-small' type='button' onclick='$.fn.filterAssignments($(\"#c\").text(),$value)'>$n</button>";
  }
?>
</div>

<div align="left"><?php echo $this->subButtonsClasses?></div>

<script type="text/javascript">
<!--
$(function (){
	var dtb_assessments = $('#dtb_assessments').dataTable( {
		"sDom": "<'row-fluid'<'span6'T><'span6'f>r>t<'row-fluid'<'span6'i><'span6'pl>>",
		"sPaginationType": "bootstrap",
	    "iDisplayLength" : 10,
		"bAutoWidth": false,

		"bProcessing": true,
		"bStateSave": false,
		"bServerSide": true,
		//"sServerMethod": "GET",
		"sAjaxSource": "/assessmentlist",
		"fnServerData": function ( sSource, aoData, fnCallback, oSettings ) {
			  aoData.push( { "name": "cid", "value": "<?php echo $this->firstcourse; ?>" } );
			  aoData.push( { "name": "grade", "value": "<?php echo $this->classes[0];?>" } );
			  aoData.push( { "name": "instructor", "value": "<?php echo $this->ins;?>" } );
		      oSettings.jqXHR = $.ajax( {
		        "dataType": 'json',
		        "type": "POST",
		        "url": sSource,
		        "data": aoData,
		        "success": fnCallback
		      });
		      },
		"aaSorting": [],
	    //"sScrollY": "250px",
	    "bPaginate": true,

		"oLanguage" : {
			 "sProcessing": "<img src='/img/loaders/cloader2.gif'> Server processing request...",
			 "sEmptyTable": "You have not been assigned the selected subject in the selected class/grade!!",
		    },

		"aoColumnDefs": [
		                     {"bSortable":false, "aTargets":[5]},
			                 { "bVisible": false, "aTargets": [ 0 ] },
			                 { "sClass": "maxmark", "aTargets": [ 5 ] },
			             ],
		"fnDrawCallback": function( oSettings ) {
						<?php if( $this->current) {  //disabling editing of marks of archived data?>
						   			   $.fn.makeeditable();
						 <?php } ?>
				   		  },

		"fnRowCallback": function( nRow, aData, iDisplayIndex ) {
		 			            var id = aData[0];
		 			            	$(nRow).attr("id",id);
		 		},
		"oTableTools": {
			//"sRowSelect": "single",
			"sSwfPath": "/js/tabletools/swf/copy_csv_xls_pdf.swf",
			"aButtons": [
							"copy",
							"print",
							"xls",
							"pdf",
							{
			                    "sExtends":    "text",
			                    "sButtonText" : "Add New Assessment",
			                    "sButtonClass" : "btn-danger whitetext",
			                    "fnClick": function ( nButton, oConfig, oFlash ) {
			                    	<?php if($this->current) { ?>
			            		 	$.post('/newassessment',
			            					{
			            		 	          send : false,
			            		 	        },
			            					function (data){
			            						$('#assessments').html(data);
			            					});
			            		 	 <?php } else { ?>
				            		 	bootbox.alert('Access Denied (Code 101) : Contact Administrator');
				            		 <?php } ?>
			                    }
			                }],


			"fnRowSelected": function ( node ) {

			}
		}
	});

    $.fn.filterAssignments = function(course, grade){
        $('#c').text(course);
        $('#g').text(grade);
    	dtb_assessments.fnReloadAjax( '/assessmentlist?cid=' + course + '&grade=' + grade );
    };

	$.fn.deleteassessment = function (assignmentid, topic){
		<?php if($this->current) { ?>
	       bootbox.confirm('Are you sure you want to delete '+topic, function(confirm){
	        if (confirm){
	    		$.post('/assignments/delete',
	    				{
	    		         id : assignmentid
	    				},
	    				function(data){
	    					dtb_assessments.fnReloadAjax( '/assessmentlist?cid=' + $('#c').text() + '&grade=' +   $('#g').text() );
	    				});
	        }
		    });
		 <?php } else { ?>
		 	bootbox.alert('Access Denied (Code 101) : Contact Administrator');
		 <?php } ?>
    };


	$.fn.updateassessment = function (id){
		<?php if ($this->current) { ?>
	 	$.post('/newassessment',
				{
			      cl_id : id,
	 	          update : true,
	 	        },
				function (data){
	 	        	$('#assignsummary').html('');
					$('#assessments').html(data);
				});
	 	<?php } else { ?>
 		bootbox.alert('Access Denied (Code 101) : Contact Administrator');
 	<?php } ?>

	};

        $.fn.makeeditable = function(){
            dtb_assessments.$('td.maxmark').editable('/assignments/maxmark',
        			{
        			"callback": function( sValue, y ) {
        				if (sValue != 'Invalid mark'){
        					$.showMessage('Update successful');
        				}
        				else{
        					dtb_assessments.fnReloadAjax();
        					bootbox.alert('Aborted: Proposed maximum mark is <strong>less than the highest score/grade <strong>received in this assessment');
        				}
        			},
        			"submitdata": function ( value, settings ) {
        				return {
        					"assignmentid": this.parentNode.getAttribute('id'),
        				};
        			},
        			type : "masked",
        			mask : "?999",
        			placeholder: "click to add mark",
        			onblur : "submit",
        			height: "15px",
        			width : "50px",
        		    event : "click"
        	});
        };
	$(".table").not('#astats').tablecloth({ theme: "paper" });
	$('#btnfirst').button('toggle');
	$('#bb0').button('toggle');
});

</script>